<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// view position
x_debug = view_xview[0] + 10;
y_debug = view_yview[0] + 10;

 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// global release
global.global_release = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// debug keys

var kPrev, kNext, kRestart, kExit

kPrev = keyboard_check_pressed(ord('O'));
kNext = keyboard_check_pressed(ord('P'));

kRestart = keyboard_check_pressed(ord('R'));

kExit = keyboard_check_pressed(vk_escape);

kIncreaseSetNum = keyboard_check_pressed(ord('U'));
kDecreaseSetNum = keyboard_check_pressed(ord('J'));

kChangeAccuracy = keyboard_check_pressed(ord('M'));

kActivateClose = keyboard_check_pressed(ord('G'));

if (!global.global_release){

// Restart application

if (kRestart)
game_restart();


//Room traversal

if (kPrev)
if (room == room_first)
room_goto(room_last);
else
room_goto_previous();

if (kNext)
if (room == room_last)
room_goto(room_first);
else
room_goto_next();

//toggle difficulty
if (kIncreaseSetNum)    {
    global.setNum += 1;
} 

if (kDecreaseSetNum)    {
    global.setNum -= 1;
}

if (kChangeAccuracy)    {
    global.accuracy = 100;
}

if (kActivateClose) {
    instance_create(0, 0, obj_Close);
}

//close application
if (kExit)
game_end();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// print debug messsages

if (!global.global_release)    {
    draw_set_halign(fa_left);
    if (instance_exists(obj_demo))  {
        draw_text(x_debug + 10, y_debug+10, "count: " + string(global.count));
        draw_text(x_debug + 10, y_debug +30, "left: " +  string(global.demoMoveLeft[global.count]));
        draw_text(x_debug + 90, y_debug +30, "right: " + string(global.demoMoveRight[global.count]));
    }
    
    if (instance_exists(obj_timer)) {
        //draw_text(obj_timer.x, obj_timer.y, obj_timer.alarm[1]);
    }
    
    if (instance_exists(obj_controller))    {
        draw_text(x_debug + 10, y_debug + 50, "difficulty: " + string(global.difficulty));   
    }
    
    draw_text(x_debug + 10, y_debug + 70, "set number: " + string(global.setNum));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
